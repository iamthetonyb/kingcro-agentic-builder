version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kingcro_agentic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # vLLM Server for Transcription (CPU-optimized)
  vllm-server:
    image: vllm/vllm-openai:latest
    command: >
      --model microsoft/speecht5_asr
      --dtype float32
      --max-model-len 4096
      --host 0.0.0.0
      --port 8000
      --api-key ${VLLM_API_KEY:-vllm-secret}
      --disable-log-requests
      --tensor-parallel-size 1
    ports:
      - "8000:8000"
    environment:
      - HF_HOME=/app/hf_cache
      - TRANSFORMERS_CACHE=/app/hf_cache
    volumes:
      - hf_cache:/app/hf_cache
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mistral Server for AI Enhancement (CPU-optimized)
  mistral-server:
    image: ollama/ollama:latest
    command: ollama serve
    ports:
      - "8001:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=*
    volumes:
      - mistral_data:/root/.ollama
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main Application Server
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD:-changeme}@postgres:5432/kingcro_agentic
      - JWT_SECRET=${JWT_SECRET:-supersecret}
      - VLLM_API_URL=http://vllm-server:8000
      - VLLM_API_KEY=${VLLM_API_KEY:-vllm-secret}
      - MISTRAL_API_URL=http://mistral-server:11434
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL}
    volumes:
      - uploads_data:/app/uploads
      - ./api:/app
    depends_on:
      postgres:
        condition: service_healthy
      vllm-server:
        condition: service_healthy
      mistral-server:
        condition: service_healthy
    restart: unless-stopped

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # n8n Workflow Automation (Optional)
  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-changeme}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=kingcro_agentic
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  uploads_data:
  hf_cache:
  mistral_data:

networks:
  default:
    driver: bridge
